Одиночка — это порождающий паттерн проектирования, который гарантирует, что у класса есть только один экземпляр,
и предоставляет к нему глобальную точку доступа.

________________________________________________________________________________________________________________________
Преимущества:
1.Гарантирует наличие единственного экземпляра класса.
2.Предоставляет к нему глобальную точку доступа.
3.Реализует отложенную инициализацию объекта-одиночки.

________________________________________________________________________________________________________________________
Недостатки:
1.Нарушает принцип единственной ответственности класса.
2.Маскирует плохой дизайн.
3.Проблемы мультипоточности.
4.Требует постоянного создания Mock-объектов при юнит-тестировании.

________________________________________________________________________________________________________________________
Шаги реализации:
1.Добавьте в класс приватное статическое поле, которое будет содержать одиночный объект.
2.Объявите статический создающий метод, который будет использоваться для получения одиночки.
3.Добавьте «ленивую инициализацию» (создание объекта при первом вызове метода) в создающий метод одиночки.
4.Сделайте конструктор класса приватным.
5.В клиентском коде замените вызовы конструктора одиночка вызовами его создающего метода.